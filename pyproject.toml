[tool.poetry]
name = "scd-loader"
version = "0.1.0"
description = ""
authors = ["Ramu Kamath <ramu.kamath.1988@gmail.clm>"]
readme = "README.md"
packages = [{include = "scd_loader"}]

[tool.poetry.dependencies]
python = "^3.8.1"
pyspark = "3.5.0"


[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
black = "^22.12.0"
isort = "^5.11.3"
absolufy-imports = "^0.3.1"
reorder-python-imports = "^3.9.0"
pyspark = "^3.3.1"
pytest = "^7.2.0"
chispa = "^0.9.2"
pytest-cov = "^4.0.0"
flake8 = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--cov=scd_loader"
testpaths = [
    "tests",
]

[tool.ruff]
target-version = "py38"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-logging-format
    "G",
    # flake8-print
    "T20",
    # flake8-pytest-style
    "PT",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TCH",
    # flake8-use-pathlib
    "PTH",
    # isort
    "I",
    # mccabe
    "C90",
    # pep8-naming
    "N",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]
extend-exclude = ["tests/*"]

[tool.ruff.flake8-type-checking]
strict = true

[tool.ruff.format]
preview = true

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]
